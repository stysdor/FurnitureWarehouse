@model Furniture.Models.ProductOrderModel
@*@{
    Model.Products = (List<Furniture.Models.ProductModel>)TempData["Products"];
}*@
<tr class="productOrder">
    @using (Html.BeginCollectionItem("ProductOrders"))
    {
        @Html.HiddenFor(x => x.Id, new { @class = "id" })
        <td class="col-8">
            @Html.LabelFor(x => x.Product, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(x => x.Product.Id, new SelectList(Model.Products, "Id", "Name"), "Wybierz produkt", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Product, null, new { @class = "text-danger" })
            </div>
        </td>
        <td class="col-2">
            @Html.LabelFor(x => x.Quantity, new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.EditorFor(x => x.Quantity, new { @class = "form-control col-sm" })
                @Html.ValidationMessageFor(x => x.Quantity, null, new { @class = "text-danger" })
            </div>
        </td>
        <td class="col-2">
            <button type="button" class="delete btn btn-primary btn-block pull-right">Usuń</button>
        </td>
    }
</tr>
<script>
    $('.delete').click(function () {
        var container = $(this).closest('.productOrder');
        container.remove();
    });
</script>
